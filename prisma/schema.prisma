generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Learning Platform Schema
model User {
  id        String  @id @default(cuid())
  clerkId   String  @unique
  email     String  @unique
  role      String  @default("user") // "user" or "admin"
  purchases Purchase[]
}

model Exam {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String
  category    String?
  level       String?
  duration    String?
  imageUrl    String?
  priceInINR  Int
  modules     Module[]
  purchases   Purchase[]
  createdAt   DateTime @default(now())
  isPublished Boolean  @default(false)
}

model Module {
  id          String   @id @default(cuid())
  examId      String
  title       String
  description String?
  exam        Exam     @relation(fields: [examId], references: [id])
  blogPosts   BlogPost[]
  pyqs        PYQ[]
  quizzes     Quiz[]
  moduleQuestions ModuleQuestion[]
}

model BlogPost {
  id          String   @id @default(cuid())
  moduleId    String
  title       String
  slug        String   @unique
  content     String   // Markdown or Rich Text
  excerpt     String?  // Short description for the landing page
  isFree      Boolean  @default(false)
  isPublished Boolean  @default(false)
  isFeatured  Boolean  @default(false)
  createdAt   DateTime @default(now())
  module      Module   @relation(fields: [moduleId], references: [id])
}

model PYQ {
  id          String   @id @default(cuid())
  moduleId    String
  question    String
  solution    String
  year        Int
  isFree      Boolean  @default(false)
  module      Module   @relation(fields: [moduleId], references: [id])
}

model Quiz {
  id          String         @id @default(cuid())
  moduleId    String
  title       String
  description String?
  passingMark Int            @default(40) // or whatever default you want
  timeLimit   Int            @default(30) // or whatever default you want
  questions   QuizQuestion[]
  module      Module         @relation(fields: [moduleId], references: [id])
}

model QuizQuestion {
  id        String   @id @default(cuid())
  quizId    String
  type      String   // 'mcq', 'true-false', etc.
  question  String
  options   String[] // for MCQ, empty for true/false
  correct   Int      // index for MCQ, 0/1 for true/false
  quiz      Quiz     @relation(fields: [quizId], references: [id])
}

model ModuleQuestion {
  id        String   @id @default(cuid())
  moduleId  String
  type      String   // 'mcq', 'true-false', etc.
  question  String
  options   String[] // for MCQ, empty for true/false
  correct   Int      // index for MCQ, 0/1 for true/false
  module    Module   @relation(fields: [moduleId], references: [id])
}

model Purchase {
  id         String   @id @default(cuid())
  userId     String
  examId     String
  amount     Int
  user       User     @relation(fields: [userId], references: [id])
  exam       Exam     @relation(fields: [examId], references: [id])
  createdAt  DateTime @default(now())
}
